class Main {

    static int t, updaterate, effectTime;
    static boolean selecting, playing, win, afterGoal;

    static Pikachu p;
    static PikachuComputer pc;
    static Ball b;
    static Rod r;
    static Point a;
    static Floor f;

    function void main() {
        do Phys.init();
        do Draw.init();
        while(true){
            do Main.gameInit();
            do Main.lobby();
            do Main.play();
            do Main.end();
        }
        return;
    }

    function void lobby() {
        do f.setwinpoint(3);
        do ScreenManager.mainlobby();
        while(selecting){
            do a.update();
            if (a.getstart()){
                let selecting = false;
                let playing = true;
            }
        }
        return;
    }

    function void gameInit() {
        let p = Pikachu.new(true);
        let pc = PikachuComputer.new(false);
        let b = Ball.new(100, 30);
        let r = Rod.new();
        let a = Point.new();
        let f = Floor.new();

        let selecting = true;
        let playing = false;
        let afterGoal = false; // if afterGoal = true, means it's the slow down state after scoring a goal
        let win = false;
        let t = 0;
        let updaterate = 20;

        
        do PhysicsManager.init(p, pc, b, r, f);
        do ScreenManager.init(p, pc, b, r, f);
        return;
    }

    function void play() {
        do Draw.drawpreparing();

        while(~win) {
            do PhysicsManager.update();
            let win = f.deterwin();
            if (Util.rem(t, 2) = 0) {
                do ScreenManager.render();
            }
            
            if (f.getHitTheFloor()) {
                let effectTime = t;
                let afterGoal = true;
            }

            if (afterGoal) {
                do Sys.wait(100);
                if (t - effectTime > 10) {
                    do Main.reset();
                    do Draw.drawpreparing();
                    let afterGoal = false;
                }
            }
            else {
                do Sys.wait(updaterate);
            }

            let t = t + 1;
        }
        let effectTime = t;
        return;
    }

    function void end() {
        while (t - effectTime < 150){
            do Draw.drawend();
            do PhysicsManager.update();
            do ScreenManager.render();
            do Sys.wait(updaterate);
            let t = t + 1;
        }
        return;
    }

    function void setupdaterate(int x){
        if (x = 1){
            let updaterate = 50;
        }
        if (x = 2){
            let updaterate = 30;
        }
        if (x = 3){
            let updaterate = 20;
        }
        return;
    }

    function void reset(){
        do p.reset();
        do pc.reset();
        do f.reset();
        do b.reset(f.getxwin());
        return;
    }

    function int getUpdateRate(){
        return updaterate;
    }
}