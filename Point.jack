class Point {
    field int x, y, x0, y0, t;
    field boolean select, start;
    constructor Point new(){
        let x = 350;
        let y = 132;
        let x0 = 350;
        let y0 = 132;
        let t = 1;
        let select = false;
        let start = false;
        return this;
    }

    method void init(){
        let x = x0;
        let y = y0;
        let t = 1;
        return;
    }

    method int getx() {
        return x;
    }

    method int gety() {
        return y;
    }

    method boolean getstart(){
        return start;
    }

    method boolean getSelect() {
        return select;
    }

    method void moveup() {
        let y = y - 60;
        let t = t - 1;
        return;
    }

    method void movedown() {
        let y = y + 60;
        let t = t + 1;
        return;
    }

    method void setSelect(boolean x) {
        let select = x;
        return;
    }

    method void boundprevent(){
        if (y < y0){
            let y = y0;
        }
        if (y > 252){
            let y = 252;
        }
        if (t < 1){
            let t = 1;
        }
        if (t > 3){
            let t = 3;
        }
        return;
    }

    method void selectlobby(){
        do Draw.drawTitle();
        do Draw.drawPoint(x, y);
        do keyInput();
        do boundprevent();
        if (select){
            if (t =1){
                do selectspeed();
            }
            if (t = 2){
                do selectwinpoint();
            }
            if (t = 3){
                let start = true;
            }
        }
        return;
    }

    method void selectspeed(){
        do setSelect(false);
        do init();
        while(~(select)){
            do Draw.drawselectspeed();
            do Draw.drawPoint(x, y);
            do keyInput();
            do boundprevent();
        }
        do Main.setupdaterate(t);
        do setSelect(false);
        do init();
        return;
    }

    method void selectwinpoint(){
        var Floor f;
        let f = PhysicsManager.getFloor();
        do setSelect(false);
        do init();
        while(~(select)){
            do Draw.drawselectwinpoint();
            do Draw.drawPoint(x, y);
            do keyInput();
            do boundprevent();
        }
        do f.setwinpoint(t);
        do setSelect(false);
        do init();
        return;
    }
    
    method void keyInput() {
        var char c;
        let c = Keyboard.readChar();
        if (c = 131){               // up
            do moveup();
        }
        if (c = 133){               // down
            do movedown();
        }
        if (c = 128){               // c
            do setSelect(true);
            do Output.backSpace();
        }
        return;
    }

    method void update() {
        while(~(start)){
            do selectlobby();
        }
        return;
    }
}